; Listing generated by Microsoft (R) Optimizing Compiler Version 19.42.34435.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG93285 DB	'WM_ACTIVATEAPP', 0aH, 00H
$SG93288 DB	'default', 0aH, 00H
	ORG $+7
$SG93313 DB	'HandmadeHeroWindowClass', 00H
$SG93316 DB	'Handmade Hero', 00H
CONST	ENDS
PUBLIC	WinMain
PUBLIC	?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z ; Win32GetWindowDimension
PUBLIC	?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z ; Win32MainWindowCallback
EXTRN	__imp_OutputDebugStringA:PROC
EXTRN	__imp_VirtualAlloc:PROC
EXTRN	__imp_VirtualFree:PROC
EXTRN	__imp_StretchDIBits:PROC
EXTRN	__imp_TranslateMessage:PROC
EXTRN	__imp_DispatchMessageA:PROC
EXTRN	__imp_PeekMessageA:PROC
EXTRN	__imp_DefWindowProcA:PROC
EXTRN	__imp_RegisterClassA:PROC
EXTRN	__imp_CreateWindowExA:PROC
EXTRN	__imp_GetDC:PROC
EXTRN	__imp_ReleaseDC:PROC
EXTRN	__imp_BeginPaint:PROC
EXTRN	__imp_EndPaint:PROC
EXTRN	__imp_GetClientRect:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?GlobalRunning@@3_NA DB 01H DUP (?)			; GlobalRunning
	ALIGN	4

?GlobalBackbuffer@@3Uwin32_offscreen_buffer@@A DB 048H DUP (?) ; GlobalBackbuffer
_BSS	ENDS
pdata	SEGMENT
$pdata$WinMain DD imagerel $LN12
	DD	imagerel $LN12+596
	DD	imagerel $unwind$WinMain
$pdata$?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z
$pdata$?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z DD imagerel ?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z
	DD	imagerel ?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z+217
	DD	imagerel $unwind$?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z
$pdata$?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z DD imagerel ?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z
	DD	imagerel ?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z+270
	DD	imagerel $unwind$?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z
$pdata$?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z DD imagerel ?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z
	DD	imagerel ?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z+159
	DD	imagerel $unwind$?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z
$pdata$?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN11
	DD	imagerel $LN11+435
	DD	imagerel $unwind$?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z
	DD	026H
	DD	0199H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z
	DD	013H
	DD	04dH
voltbl	ENDS
xdata	SEGMENT
$unwind$WinMain DD 041d01H
	DD	037011dH
	DD	060157016H
$unwind$?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z DD 011819H
	DD	08209H
	DD	imagerel __GSHandlerCheck
	DD	038H
$unwind$?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z DD 011201H
	DD	04212H
$unwind$?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z DD 011201H
	DD	06212H
$unwind$?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z DD 011701H
	DD	0e217H
$unwind$?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z DD 042e19H
	DD	023011cH
	DD	060147015H
	DD	imagerel __GSHandlerCheck
	DD	0100H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = 32
Dimension$1 = 40
Result$ = 48
X$2 = 56
Y$3 = 60
Height$4 = 64
Width$5 = 68
$T6 = 72
DeviceContext$7 = 80
$T8 = 96
Paint$9 = 176
__$ArrayPad$ = 256
Window$ = 304
Message$ = 312
WParam$ = 320
LParam$ = 328
?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z PROC	; Win32MainWindowCallback
; File D:\Programming\Workstation\handmade_hero\handmade\code\win32_handmade.cpp
; Line 129
$LN11:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 280				; 00000118H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 130
	mov	QWORD PTR Result$[rsp], 0
; Line 131
	mov	eax, DWORD PTR Message$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN5@Win32MainW
	cmp	DWORD PTR tv64[rsp], 5
	je	SHORT $LN4@Win32MainW
	cmp	DWORD PTR tv64[rsp], 15
	je	SHORT $LN8@Win32MainW
	cmp	DWORD PTR tv64[rsp], 16
	je	SHORT $LN6@Win32MainW
	cmp	DWORD PTR tv64[rsp], 28
	je	SHORT $LN7@Win32MainW
	jmp	$LN9@Win32MainW
$LN4@Win32MainW:
; Line 135
	jmp	$LN2@Win32MainW
$LN5@Win32MainW:
; Line 139
	mov	BYTE PTR ?GlobalRunning@@3_NA, 0
; Line 140
	jmp	$LN2@Win32MainW
$LN6@Win32MainW:
; Line 144
	mov	BYTE PTR ?GlobalRunning@@3_NA, 0
; Line 145
	jmp	$LN2@Win32MainW
$LN7@Win32MainW:
; Line 149
	lea	rcx, OFFSET FLAT:$SG93285
	call	QWORD PTR __imp_OutputDebugStringA
	npad	1
; Line 150
	jmp	$LN2@Win32MainW
$LN8@Win32MainW:
; Line 154
	lea	rdx, QWORD PTR Paint$9[rsp]
	mov	rcx, QWORD PTR Window$[rsp]
	call	QWORD PTR __imp_BeginPaint
	mov	QWORD PTR DeviceContext$7[rsp], rax
; Line 155
	mov	eax, DWORD PTR Paint$9[rsp+12]
	mov	DWORD PTR X$2[rsp], eax
; Line 156
	mov	eax, DWORD PTR Paint$9[rsp+16]
	mov	DWORD PTR Y$3[rsp], eax
; Line 157
	mov	eax, DWORD PTR Paint$9[rsp+16]
	mov	ecx, DWORD PTR Paint$9[rsp+24]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Height$4[rsp], eax
; Line 158
	mov	eax, DWORD PTR Paint$9[rsp+12]
	mov	ecx, DWORD PTR Paint$9[rsp+20]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Width$5[rsp], eax
; Line 160
	mov	rcx, QWORD PTR Window$[rsp]
	call	?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z ; Win32GetWindowDimension
	mov	QWORD PTR $T6[rsp], rax
	mov	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR Dimension$1[rsp], rax
; Line 161
	lea	rax, QWORD PTR $T8[rsp]
	lea	rcx, OFFSET FLAT:?GlobalBackbuffer@@3Uwin32_offscreen_buffer@@A
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 72					; 00000048H
	rep movsb
	lea	r9, QWORD PTR $T8[rsp]
	mov	r8d, DWORD PTR Dimension$1[rsp+4]
	mov	edx, DWORD PTR Dimension$1[rsp]
	mov	rcx, QWORD PTR DeviceContext$7[rsp]
	call	?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z ; Win32DisplayBufferInWindow
; Line 163
	lea	rdx, QWORD PTR Paint$9[rsp]
	mov	rcx, QWORD PTR Window$[rsp]
	call	QWORD PTR __imp_EndPaint
	npad	1
; Line 164
	jmp	SHORT $LN2@Win32MainW
$LN9@Win32MainW:
; Line 167
	lea	rcx, OFFSET FLAT:$SG93288
	call	QWORD PTR __imp_OutputDebugStringA
; Line 168
	mov	r9, QWORD PTR LParam$[rsp]
	mov	r8, QWORD PTR WParam$[rsp]
	mov	edx, DWORD PTR Message$[rsp]
	mov	rcx, QWORD PTR Window$[rsp]
	call	QWORD PTR __imp_DefWindowProcA
	mov	QWORD PTR Result$[rsp], rax
$LN2@Win32MainW:
; Line 171
	mov	rax, QWORD PTR Result$[rsp]
; Line 172
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 280				; 00000118H
	pop	rdi
	pop	rsi
	ret	0
?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z ENDP	; Win32MainWindowCallback
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
DeviceContext$ = 128
WindowWidth$ = 136
WindowHeight$ = 144
Buffer$ = 152
?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z PROC ; Win32DisplayBufferInWindow
; File D:\Programming\Workstation\handmade_hero\handmade\code\win32_handmade.cpp
; Line 110
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
; Line 111
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	DWORD PTR [rsp+96], 13369376		; 00cc0020H
	mov	DWORD PTR [rsp+88], 0
	mov	QWORD PTR [rsp+80], rax
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	rax, QWORD PTR [rax+48]
	mov	QWORD PTR [rsp+72], rax
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	eax, DWORD PTR [rax+60]
	mov	DWORD PTR [rsp+64], eax
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	eax, DWORD PTR [rax+56]
	mov	DWORD PTR [rsp+56], eax
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	eax, DWORD PTR WindowHeight$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR WindowWidth$[rsp]
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR DeviceContext$[rsp]
	call	QWORD PTR __imp_StretchDIBits
	npad	1
; Line 122
	add	rsp, 120				; 00000078H
	ret	0
?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z ENDP ; Win32DisplayBufferInWindow
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
BitmapMemorySize$ = 32
Buffer$ = 64
Width$ = 72
Height$ = 80
?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z PROC ; Win32ResizeDIBSection
; File D:\Programming\Workstation\handmade_hero\handmade\code\win32_handmade.cpp
; Line 81
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 82
	mov	rax, QWORD PTR Buffer$[rsp]
	cmp	QWORD PTR [rax+48], 0
	je	SHORT $LN2@Win32Resiz
; Line 84
	mov	r8d, 32768				; 00008000H
	xor	edx, edx
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	rcx, QWORD PTR [rax+48]
	call	QWORD PTR __imp_VirtualFree
	npad	1
$LN2@Win32Resiz:
; Line 87
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	ecx, DWORD PTR Width$[rsp]
	mov	DWORD PTR [rax+56], ecx
; Line 88
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	ecx, DWORD PTR Height$[rsp]
	mov	DWORD PTR [rax+60], ecx
; Line 89
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	DWORD PTR [rax+68], 4
; Line 91
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	DWORD PTR [rax], 40			; 00000028H
; Line 92
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	rcx, QWORD PTR Buffer$[rsp]
	mov	ecx, DWORD PTR [rcx+56]
	mov	DWORD PTR [rax+4], ecx
; Line 93
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	eax, DWORD PTR [rax+60]
	neg	eax
	mov	rcx, QWORD PTR Buffer$[rsp]
	mov	DWORD PTR [rcx+8], eax
; Line 94
	mov	eax, 1
	mov	rcx, QWORD PTR Buffer$[rsp]
	mov	WORD PTR [rcx+12], ax
; Line 95
	mov	eax, 32					; 00000020H
	mov	rcx, QWORD PTR Buffer$[rsp]
	mov	WORD PTR [rcx+14], ax
; Line 96
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	DWORD PTR [rax+16], 0
; Line 98
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	rcx, QWORD PTR Buffer$[rsp]
	mov	eax, DWORD PTR [rax+56]
	imul	eax, DWORD PTR [rcx+60]
	mov	rcx, QWORD PTR Buffer$[rsp]
	imul	eax, DWORD PTR [rcx+68]
	mov	DWORD PTR BitmapMemorySize$[rsp], eax
; Line 99
	movsxd	rax, DWORD PTR BitmapMemorySize$[rsp]
	mov	r9d, 4
	mov	r8d, 4096				; 00001000H
	mov	rdx, rax
	xor	ecx, ecx
	call	QWORD PTR __imp_VirtualAlloc
	mov	rcx, QWORD PTR Buffer$[rsp]
	mov	QWORD PTR [rcx+48], rax
; Line 101
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	ecx, DWORD PTR Width$[rsp]
	imul	ecx, DWORD PTR [rax+68]
	mov	eax, ecx
	mov	rcx, QWORD PTR Buffer$[rsp]
	mov	DWORD PTR [rcx+64], eax
; Line 105
	add	rsp, 56					; 00000038H
	ret	0
?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z ENDP ; Win32ResizeDIBSection
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
Green$1 = 0
Blue$2 = 1
X$3 = 4
Y$4 = 8
Pixel$5 = 16
Row$ = 24
Buffer$ = 48
XOffset$ = 56
YOffset$ = 64
?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z PROC ; RenderWeirdGradient
; File D:\Programming\Workstation\handmade_hero\handmade\code\win32_handmade.cpp
; Line 54
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; Line 55
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	rax, QWORD PTR [rax+48]
	mov	QWORD PTR Row$[rsp], rax
; Line 56
	mov	DWORD PTR Y$4[rsp], 0
	jmp	SHORT $LN4@RenderWeir
$LN2@RenderWeir:
	mov	eax, DWORD PTR Y$4[rsp]
	inc	eax
	mov	DWORD PTR Y$4[rsp], eax
$LN4@RenderWeir:
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	eax, DWORD PTR [rax+60]
	cmp	DWORD PTR Y$4[rsp], eax
	jge	$LN3@RenderWeir
; Line 58
	mov	rax, QWORD PTR Row$[rsp]
	mov	QWORD PTR Pixel$5[rsp], rax
; Line 59
	mov	DWORD PTR X$3[rsp], 0
	jmp	SHORT $LN7@RenderWeir
$LN5@RenderWeir:
	mov	eax, DWORD PTR X$3[rsp]
	inc	eax
	mov	DWORD PTR X$3[rsp], eax
$LN7@RenderWeir:
	mov	rax, QWORD PTR Buffer$[rsp]
	mov	eax, DWORD PTR [rax+56]
	cmp	DWORD PTR X$3[rsp], eax
	jge	SHORT $LN6@RenderWeir
; Line 61
	mov	eax, DWORD PTR XOffset$[rsp]
	mov	ecx, DWORD PTR X$3[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	BYTE PTR Blue$2[rsp], al
; Line 62
	mov	eax, DWORD PTR YOffset$[rsp]
	mov	ecx, DWORD PTR Y$4[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	BYTE PTR Green$1[rsp], al
; Line 71
	movzx	eax, BYTE PTR Green$1[rsp]
	shl	eax, 8
	movzx	ecx, BYTE PTR Blue$2[rsp]
	or	eax, ecx
	mov	rcx, QWORD PTR Pixel$5[rsp]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR Pixel$5[rsp]
	add	rax, 4
	mov	QWORD PTR Pixel$5[rsp], rax
; Line 73
	jmp	SHORT $LN5@RenderWeir
$LN6@RenderWeir:
; Line 75
	mov	rax, QWORD PTR Buffer$[rsp]
	movsxd	rax, DWORD PTR [rax+64]
	mov	rcx, QWORD PTR Row$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR Row$[rsp], rax
; Line 76
	jmp	$LN2@RenderWeir
$LN3@RenderWeir:
; Line 77
	add	rsp, 40					; 00000028H
	ret	0
?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z ENDP ; RenderWeirdGradient
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
Result$ = 32
ClientRect$ = 40
__$ArrayPad$ = 56
Window$ = 80
?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z PROC ; Win32GetWindowDimension
; File D:\Programming\Workstation\handmade_hero\handmade\code\win32_handmade.cpp
; Line 37
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 41
	lea	rdx, QWORD PTR ClientRect$[rsp]
	mov	rcx, QWORD PTR Window$[rsp]
	call	QWORD PTR __imp_GetClientRect
; Line 42
	mov	eax, DWORD PTR ClientRect$[rsp]
	mov	ecx, DWORD PTR ClientRect$[rsp+8]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Result$[rsp], eax
; Line 43
	mov	eax, DWORD PTR ClientRect$[rsp+4]
	mov	ecx, DWORD PTR ClientRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR Result$[rsp+4], eax
; Line 45
	mov	rax, QWORD PTR Result$[rsp]
; Line 46
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z ENDP ; Win32GetWindowDimension
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
XOffset$1 = 96
Window$2 = 104
YOffset$3 = 112
Dimension$4 = 120
DeviceContext$5 = 128
$T6 = 136
WindowClass$ = 144
Message$7 = 224
$T8 = 272
$T9 = 352
Instance$ = 464
PrevInstance$ = 472
CommandLine$ = 480
ShowCode$ = 488
WinMain	PROC
; File D:\Programming\Workstation\handmade_hero\handmade\code\win32_handmade.cpp
; Line 179
$LN12:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 440				; 000001b8H
; Line 180
	lea	rax, QWORD PTR WindowClass$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 72					; 00000048H
	rep stosb
; Line 182
	mov	r8d, 720				; 000002d0H
	mov	edx, 1280				; 00000500H
	lea	rcx, OFFSET FLAT:?GlobalBackbuffer@@3Uwin32_offscreen_buffer@@A
	call	?Win32ResizeDIBSection@@YAXPEAUwin32_offscreen_buffer@@HH@Z ; Win32ResizeDIBSection
; Line 185
	mov	DWORD PTR WindowClass$[rsp], 3
; Line 186
	lea	rax, OFFSET FLAT:?Win32MainWindowCallback@@YA_JPEAUHWND__@@I_K_J@Z ; Win32MainWindowCallback
	mov	QWORD PTR WindowClass$[rsp+8], rax
; Line 187
	mov	rax, QWORD PTR Instance$[rsp]
	mov	QWORD PTR WindowClass$[rsp+24], rax
; Line 188
	lea	rax, OFFSET FLAT:$SG93313
	mov	QWORD PTR WindowClass$[rsp+64], rax
; Line 190
	lea	rcx, QWORD PTR WindowClass$[rsp]
	call	QWORD PTR __imp_RegisterClassA
	movzx	eax, ax
	test	eax, eax
	je	$LN6@WinMain
; Line 192
	mov	QWORD PTR [rsp+88], 0
	mov	rax, QWORD PTR Instance$[rsp]
	mov	QWORD PTR [rsp+80], rax
	mov	QWORD PTR [rsp+72], 0
	mov	QWORD PTR [rsp+64], 0
	mov	DWORD PTR [rsp+56], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+48], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+40], -2147483648		; ffffffff80000000H
	mov	DWORD PTR [rsp+32], -2147483648		; ffffffff80000000H
	mov	r9d, 282001408				; 10cf0000H
	lea	r8, OFFSET FLAT:$SG93316
	mov	rdx, QWORD PTR WindowClass$[rsp+64]
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR Window$2[rsp], rax
; Line 205
	cmp	QWORD PTR Window$2[rsp], 0
	je	$LN8@WinMain
; Line 207
	mov	DWORD PTR XOffset$1[rsp], 0
; Line 208
	mov	DWORD PTR YOffset$3[rsp], 0
; Line 210
	mov	BYTE PTR ?GlobalRunning@@3_NA, 1
$LN2@WinMain:
; Line 211
	movzx	eax, BYTE PTR ?GlobalRunning@@3_NA
	test	eax, eax
	je	$LN3@WinMain
$LN4@WinMain:
; Line 214
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR Message$7[rsp]
	call	QWORD PTR __imp_PeekMessageA
	test	eax, eax
	je	SHORT $LN5@WinMain
; Line 216
	cmp	DWORD PTR Message$7[rsp+8], 18
	jne	SHORT $LN10@WinMain
; Line 218
	mov	BYTE PTR ?GlobalRunning@@3_NA, 0
$LN10@WinMain:
; Line 220
	lea	rcx, QWORD PTR Message$7[rsp]
	call	QWORD PTR __imp_TranslateMessage
; Line 221
	lea	rcx, QWORD PTR Message$7[rsp]
	call	QWORD PTR __imp_DispatchMessageA
	npad	1
; Line 222
	jmp	SHORT $LN4@WinMain
$LN5@WinMain:
; Line 223
	lea	rax, QWORD PTR $T8[rsp]
	lea	rcx, OFFSET FLAT:?GlobalBackbuffer@@3Uwin32_offscreen_buffer@@A
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 72					; 00000048H
	rep movsb
	mov	r8d, DWORD PTR YOffset$3[rsp]
	mov	edx, DWORD PTR XOffset$1[rsp]
	lea	rcx, QWORD PTR $T8[rsp]
	call	?RenderWeirdGradient@@YAXUwin32_offscreen_buffer@@HH@Z ; RenderWeirdGradient
; Line 224
	mov	rcx, QWORD PTR Window$2[rsp]
	call	QWORD PTR __imp_GetDC
	mov	QWORD PTR DeviceContext$5[rsp], rax
; Line 226
	mov	rcx, QWORD PTR Window$2[rsp]
	call	?Win32GetWindowDimension@@YA?AUwin32_window_dimension@@PEAUHWND__@@@Z ; Win32GetWindowDimension
	mov	QWORD PTR $T6[rsp], rax
	mov	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR Dimension$4[rsp], rax
; Line 227
	lea	rax, QWORD PTR $T9[rsp]
	lea	rcx, OFFSET FLAT:?GlobalBackbuffer@@3Uwin32_offscreen_buffer@@A
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 72					; 00000048H
	rep movsb
	lea	r9, QWORD PTR $T9[rsp]
	mov	r8d, DWORD PTR Dimension$4[rsp+4]
	mov	edx, DWORD PTR Dimension$4[rsp]
	mov	rcx, QWORD PTR DeviceContext$5[rsp]
	call	?Win32DisplayBufferInWindow@@YAXPEAUHDC__@@HHUwin32_offscreen_buffer@@@Z ; Win32DisplayBufferInWindow
; Line 229
	mov	rdx, QWORD PTR DeviceContext$5[rsp]
	mov	rcx, QWORD PTR Window$2[rsp]
	call	QWORD PTR __imp_ReleaseDC
; Line 231
	mov	eax, DWORD PTR XOffset$1[rsp]
	inc	eax
	mov	DWORD PTR XOffset$1[rsp], eax
; Line 232
	jmp	$LN2@WinMain
$LN3@WinMain:
$LN8@WinMain:
$LN6@WinMain:
; Line 243
	xor	eax, eax
; Line 244
	add	rsp, 440				; 000001b8H
	pop	rdi
	pop	rsi
	ret	0
WinMain	ENDP
_TEXT	ENDS
END
